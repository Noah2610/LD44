Settings(
    camera: (
        /// Window size
        // size:             (1200.0,      800.0),
        // size:             (600.0,      400.0),
        size:             (300.0,      200.0),
        /// Rectangle in the center of the window, where the camera smoothly scrolls to player;
        /// Outside of this rectangle, the camera instantly snaps to where player is back inside.
        /// Basically, the player can never be outside of this inner rectangle.
        inner_size:       (200.0,       100.0),
        /// Camera's smooth scroll speed multiplier.
        base_speed:       (250.0,       250.0),
        /// Pixel padding, in which camera will stop scrolling to player.
        /// The camera will always center within +- these amounts of pixels, (accuracy kinda).
        deadzone:         (16.0,        16.0),
    ),

    player: (
        /// This is not used currently. Size is read from map.json, so it is defined with Tiled.
        size:                       (16.0,        32.0),
        /// Player velocity acceleration when _not running_.
        acceleration:               (1000.0,      0.0),
        /// Jump velocity boost.
        jump_strength:              400.0,
        /// Wall jump velocity boost (x, y).
        wall_jump_strength:         (400.0, 400.0),
        /// Amount of velocity to kill when releasing the jump button.
        decr_jump_strength:         200.0,
        /// The minimum amount of y velocity, after killing the jump.
        min_jump_velocity:          50.0,
        /// Max velocity when _not running_.
        max_velocity:               (Some(150.0), None),
        /// Decrease velocity by this amount, every frame.
        /// x value has no effect when moving, y value has no effect when falling/jumping.
        decr_velocity:              (2000.0,      1000.0),
        /// Gravitational pull when _not jumping_.
        gravity:                    (0.0,         -500.0),
        /// Gravitational pull _when jumping_.
        jump_gravity:               (0.0,         -350.0),
        /// Velocity when sliding on / clinging to a `Solid` & `Collision` entity.
        slide_strength:             75.0,
        /// Behavior when turning around. Possible values:
        /// - `0` (_will hopefully be `No` in the future_)
        ///   Don't do anything to velocity when turning around. Example:
        ///   When player is moving _left_ and then turns around to move _right_,
        ///   the velocity of running _left_ (negative) must first increase and pass 0 (positive),
        ///   before the player starts running to the _right_.
        ///   _(left: negative, right: positive)_
        /// - `1` (_will hopefully be `ResetVelocity` in the future_)
        ///   When turning around, reset velocity to 0.
        ///   This means, the previous direction's velocity does _not_ need to drain first.
        /// - `2` (_will hopefully be `InvertVelocity` in the future_)
        ///   When turning around, the velocity's sign is instantly inverted (`velocity.x * -1.0`),
        ///   which means, that no speed is lost when turning around.
        quick_turnaround:           0,
        /// Turning around behavior when in mid air.
        air_quick_turnaround:       0,
        /// If the x velocity should be decreased when in air.
        decrease_x_velocity_in_air: true,
        /// Player starting health (there is no max health)
        health:                     10,
        /// Player damage
        damage:                     25,
    ),

    loading_text: (
      text:      "Loading...",
      font_file: "fonts/square.ttf",
      font_size: 64.0,
    ),

    level_manager: (
      levels_dir:  "levels",
      level_names: ("one.json", "two.json"),
      tile_size:   (32.0, 32.0),
    ),

    enemies: (
      gravity: (0.0, -500.0),
      normal:  (
        health:           100,
        damage:           1,
        reward:           10,
        knockback:        (500.0, 200.0),
        trigger_distance: (128.0, 128.0),
        acceleration:     (1000.0, 0.0),
        max_velocity:     (Some(75.0), Some(500.0)),
        decr_velocity:    (2000.0, 1000.0),
      ),
    ),

    items: (
      extra_jump: (
        cost: 8,
      ),
      wall_jump: (
        cost: 8,
      ),
      knockback: (
        cost: 8,
      ),

      settings: (
        knockback_strength: (1000.0, 500.0),
      )
    ),
)

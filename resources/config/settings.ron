Settings(
    music_volume: 0.5,

    /// Y level, at which to kill entities, when they dip below it.
    death_floor: -200.0,

    camera: (
        /// Window size
        // size:             (1200.0,      800.0),
        size:             (600.0,      400.0),
        /// Rectangle in the center of the window, where the camera smoothly scrolls to player;
        /// Outside of this rectangle, the camera instantly snaps to where player is back inside.
        /// Basically, the player can never be outside of this inner rectangle.
        inner_size:       (200.0,       100.0),
        /// Camera's smooth scroll speed multiplier.
        base_speed:       (250.0,       250.0),
        /// Pixel padding, in which camera will stop scrolling to player.
        /// The camera will always center within +- these amounts of pixels, (accuracy kinda).
        deadzone:         (16.0,        16.0),
    ),

    player: (
        /// This is not used currently. Size is read from map.json, so it is defined with Tiled.
        size:                       (16.0,        32.0),
        /// Player velocity acceleration when _not running_.
        acceleration:               (1000.0,      0.0),
        /// Jump velocity boost.
        jump_strength:              400.0,
        /// Wall jump velocity boost (x, y).
        wall_jump_strength:         (500.0, 500.0),
        /// Amount of velocity to kill when releasing the jump button.
        decr_jump_strength:         200.0,
        /// The minimum amount of y velocity, after killing the jump.
        min_jump_velocity:          50.0,
        /// Max velocity when _not running_.
        max_velocity:               (Some(250.0), None),
        /// Decrease velocity by this amount, every frame.
        /// x value has no effect when moving, y value has no effect when falling/jumping.
        decr_velocity:              (2000.0,      1000.0),
        /// Gravitational pull when _not jumping_.
        gravity:                    (0.0,         -800.0),
        /// Gravitational pull _when jumping_.
        jump_gravity:               (0.0,         -350.0),
        /// Velocity when sliding on / clinging to a `Solid` & `Collision` entity.
        slide_strength:             75.0,
        /// Behavior when turning around. Possible values:
        /// - `0` (_will hopefully be `No` in the future_)
        ///   Don't do anything to velocity when turning around. Example:
        ///   When player is moving _left_ and then turns around to move _right_,
        ///   the velocity of running _left_ (negative) must first increase and pass 0 (positive),
        ///   before the player starts running to the _right_.
        ///   _(left: negative, right: positive)_
        /// - `1` (_will hopefully be `ResetVelocity` in the future_)
        ///   When turning around, reset velocity to 0.
        ///   This means, the previous direction's velocity does _not_ need to drain first.
        /// - `2` (_will hopefully be `InvertVelocity` in the future_)
        ///   When turning around, the velocity's sign is instantly inverted (`velocity.x * -1.0`),
        ///   which means, that no speed is lost when turning around.
        quick_turnaround:           0,
        /// Turning around behavior when in mid air.
        air_quick_turnaround:       0,
        /// If the x velocity should be decreased when in air.
        decrease_x_velocity_in_air: true,
        /// Player starting health (there is no max health)
        health:                     100,
        /// Player damage
        damage:                     1,
    ),

    loading_text: (
        text:      "Loading...",
        font_file: "fonts/square.ttf",
        font_size: 64.0,
    ),

    level_manager: (
        levels_dir:  "levels",
        level_names: ("one.json", "four.json", "two.json", "three.json", "four.json"),
        song_names:  ("level_3.ogg", "level_4.ogg", "level_5.ogg", "level_2.ogg"),
        tile_size:   (32.0, 32.0),
        /// Relative path to the save file
        savefile_path: "savefile.json",
    ),

    enemies: (
        gravity: (0.0, -500.0),
        normal:  (
            health:                10,
            damage:                2,
            reward:                2,
            knockback:             (500.0, 200.0),
            trigger_distance:      (192.0, 128.0),
            acceleration:          (200.0, 0.0),
            max_velocity:          (Some(50.0), Some(500.0)),
            decr_velocity:         (1000.0, 1000.0),
        ),
        charger:  (
            health:                2,
            damage:                4,
            reward:                2,
            knockback:             (1000.0, 200.0),
            trigger_distance:      (256.0, 32.0),
            acceleration:          (500.0, 0.0),
            max_velocity:          (Some(200.0), Some(500.0)),
            decr_velocity:         (100.0, 1000.0),
        ),
        flying:  (
            health:                2,
            damage:                5,
            reward:                3,
            knockback:             (500.0, 200.0),
            trigger_distance:      (256.0, 192.0),
            acceleration:          (500.0, 100.0),
            max_velocity:          (Some(25.0), Some(25.0)),
            decr_velocity:         (100.0, 100.0),
        ),
        reaper:  (
            health:                30,
            damage:                1,
            reward:                3,
            knockback:             (2000.0, 200.0),
            trigger_distance:      (128.0, 128.0),
            acceleration:          (500.0, 100.0),
            max_velocity:          (Some(100.0), Some(500.0)),
            decr_velocity:         (1000.0, 1000.0),
        ),
        turret:  (
            health:                3,
            damage:                1,
            reward:                3,
            knockback:             (500.0, 150.0),
            trigger_distance:      (256.0, 192.0),
            acceleration:          (0.0, 0.0),
            max_velocity:          (None, None),
            decr_velocity:         (0.0, 0.0),
        ),
        turret_data: (
          bullet_velocity:  (200.0, 0.0),
          bullet_size:      (16.0, 16.0),
          shot_interval_ms: 1000,
        )
    ),

    items: (
        extra_jump: (
            cost: 8,
        ),
        wall_jump: (
            cost: 8,
        ),
        knockback: (
            cost: 8,
        ),
        bullet_shoot: (
            cost: 8,
        ),
        dash: (
            cost: 8,
        ),
        speed_up: (
            cost: 8,
        ),
        jump_up: (
            cost: 8,
        ),
        damage_up: (
            cost: 8,
        ),

        settings: (
            knockback_strength:       (250.0, 100.0),
            bullet_shoot_damage:      1,
            bullet_shoot_velocity:    (500.0, 0.0),
            bullet_shoot_size:        (16.0, 16.0),
            bullet_shoot_lifetime_ms: 5000,
            dash_duration_ms:         150,
            dash_velocity:            (750.0, 500.0),
            dash_input_delay_ms:      250,
            dash_double_tap:          false,
            speed_up_max_velocity_up: 100.0,
            speed_up_acceleration_up: 300.0,
            jump_up:                  50.0,
            damage_up:                1,
        )
    ),

    /// Settings for harmful tiles (spikes).
    harmful: (
      knockback_strength: (500.0, 500.0),
    ),

    /// Settings for the entity loader system.
    entity_loader: (
      /// Anything beyond this distance to the player will be unloaded,
      /// anything within this distance to the player will be loaded.
      load_distance:                    (416.0, 416.0),
      /// The `load_distance` minus the `enemy_load_distance_substraction`,
      /// is the load_distance for enemies.
      /// We load enemies from less far away, because if they are loaded
      /// and moving into unloaded solid tiles, then they will get stuck
      /// once the tiles become loaded.
      enemy_load_distance_substraction: (72.0, 72.0),
    )
)

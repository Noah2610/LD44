#!/bin/bash
# Run the project for development.
# All command-line arguments are passed to the executed `cargo` command.
# Optional environment variables:
#   $RUN_NEW_TERMINAL
#     If this variable is not `0` or empty,
#     then the cargo command is executed in a new terminal.
#     DEFAULT: ""
#   $RUN_DEV
#     If this variable is not `0` or empty,
#     then the `$DEV` variable is set and passed to the executable.
#     DEFAULT: "1"
#   $RUN_CONTROLLER
#     If the game should be run with the amethyst controller feature.
#     amethyst/sdl_controller
#     DEFAULT: "1"

# shellcheck source=./util.sh
_dir="$( dirname "$0" )"
[ -f "${_dir}/util.sh" ] || bash "${_dir}/download-util.sh" || exit 1
source "${_dir}/util.sh"
unset _dir

LOGFILE="${ROOT}/logs/$( basename "$0" ).log"

# https://stackoverflow.com/a/17841619/10927893
function join_by { local IFS="$1"; shift; echo "$*"; }

function run {
  check "cargo"
  local features_str
  local features=("amethyst/nightly")
  [ -n "$RUN_CONTROLLER" ] && [ "$RUN_CONTROLLER" != "0" ] && features+=("amethyst/sdl_controller")
  features_str="$( join_by ',' "${features[@]}" )"
  local cmd="cargo +nightly-2019-03-01 run --features $features_str $*"
  local run_msg
  run_msg="$( colored "$COLOR_MSG_STRONG" "RUNNING:" ) $( colored "$COLOR_CODE" "$cmd" )"
  echo -e "$run_msg"
  if should_run_in_terminal; then
    run_terminal "DEV='$RUN_DEV' $cmd"
  else
    DEV="$RUN_DEV" $cmd
  fi
}

[ -z "$RUN_DEV" ]        && RUN_DEV="1"
[ -z "$RUN_CONTROLLER" ] && RUN_CONTROLLER="1"

run "$@"
